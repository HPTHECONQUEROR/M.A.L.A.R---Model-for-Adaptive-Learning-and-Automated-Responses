import tkinter as tk
from tkinter import filedialog
import requests
from PIL import Image

class ImageFileChooser:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("Drag and drop an image file")
        self.root.geometry("500x300")
        self.root.iconbitmap('CYBOT.ico')
        self.root.maxsize(500, 300)
        self.root.configure(bg='#eeeedd')

        self.label = tk.Label(self.root, text="Drag and drop an image file here", bg="#443355", width=30, height=10, font=('arial', 16), fg='white')
        self.label.pack()

        self.open_button = tk.Button(self.root, text="Open", command=self.open_file, font=('arial', 14), fg='black', bg='#FFCDBF')
        self.open_button.pack(pady=(5, 5))

        self.path = None

    def open_file(self):
        self.path = filedialog.askopenfilename(filetypes=[('Image Files', '*.png;*.jpg;*.jpeg;*.gif;*.bmp')])
        self.root.destroy()

    def run(self):
        while True:
            self.root.mainloop()
            if self.path:
                image = self.path
                API_URL = "https://api-inference.huggingface.co/models/Nahrawy/AIorNot"
                headers = {"Authorization": "Bearer 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"}

                def query(filename):
                    with open(filename, "rb") as f:
                        data = f.read()
                    response = requests.post(API_URL, headers=headers, data=data)
                    return response.json()

                try:
                    output = query(image)
                    ai_score = [item['score'] for item in output if item['label'] == 'ai'][0]
                    img = Image.open(image)
                    img.show()
                    if ai_score > 0.5:
                        return f"The image you have provided is generated by an AI with a confidence of {ai_score * 100:.2f}%"
                    else:
                        return f"The image you have provided is an original image with a confidence of {(1 - ai_score) * 100:.2f}%"
                except Exception as e:
                    return ("unexpected error occured try again")
                    app= ImageFileChooser()
                    app.run()
            else:
                return "No image selected. Exiting..."

if __name__ == "__main__":
    app = ImageFileChooser()
    output = app.run()
    print(output)
